{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","alt","cloud","name","messageText","time","messageData","HW1","Affair","priorityStyle","affair__priority","affair","priority","affair__name","affair__btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setPriorityHandler","value","setFilter","affairs","affairs__btn","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","af","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","addUserOnEnter","error","totalUsers","inputClass","input","greeting","inputWrapper","onChange","onKeyPress","btn","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","newUser","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.816d23fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__3TB4e\",\"affairs__btn\":\"Affairs_affairs__btn__1norQ\",\"affair\":\"Affairs_affair__17fv6\",\"affair__name\":\"Affairs_affair__name__10uOC\",\"affair__priority\":\"Affairs_affair__priority__3yIRq\",\"affair__btn\":\"Affairs_affair__btn__1k542\",\"high\":\"Affairs_high__1xYid\",\"middle\":\"Affairs_middle__2QtP_\",\"low\":\"Affairs_low__2HSi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__1WDZM\",\"inputWrapper\":\"Greeting_inputWrapper__BuEiS\",\"input\":\"Greeting_input__Xihwz\",\"error\":\"Greeting_error__2uUtM\",\"errorMessage\":\"Greeting_errorMessage__3F1jy\",\"btn\":\"Greeting_btn__1r1wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__Y9J2-\",\"avatar\":\"Message_avatar__1nDYR\",\"cloud\":\"Message_cloud__1VyqD\",\"name\":\"Message_name__w4-oS\",\"messageText\":\"Message_messageText__2tpnF\",\"time\":\"Message_time__2ZkQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1U2Gx\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.cloud}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.messageText}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Alex',\r\n    message: 'Hello my friend. Thanks for everything.',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\r\n\r\n    const priorityStyle = s.affair__priority + \" \" + s[props.affair.priority]\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <span className={s.affair__name}>{props.affair.name}</span>\r\n            <span className={priorityStyle}>{props.affair.priority}</span>\r\n            <button className={s.affair__btn} onClick={deleteCallback}>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setPriorityHandler = (value: FilterType) => {\r\n        props.setFilter(value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.affairs}>\r\n            {mappedAffairs}\r\n            <button className={s.affairs__btn} onClick={() => {setPriorityHandler('all')}}>All</button>\r\n            <button className={s.affairs__btn} onClick={() => {setPriorityHandler('high')}}>High</button>\r\n            <button className={s.affairs__btn} onClick={() => {setPriorityHandler('middle')}}>Middle</button>\r\n            <button className={s.affairs__btn} onClick={() => {setPriorityHandler('low')}}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else {\r\n        return affairs.filter(af => af.priority === filter)\r\n    }\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(af => af._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    addUserOnEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, addUserOnEnter, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? `${s.error} ${s.input}` : s.input // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div className={s.inputWrapper}>\r\n                <input\r\n                    className={inputClass}\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    onKeyPress={addUserOnEnter}\r\n                />\r\n                <button className={s.btn} onClick={addUser}>add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n            <span className={s.errorMessage}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value.trim()\r\n        if (trimmedName) {\r\n            setName(trimmedName)\r\n            setError('')\r\n        } else {\r\n            setError('name is require')\r\n            setName('')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        if (name === \"\") {\r\n            setError('name is require')\r\n            return;\r\n        }\r\n        alert(`Hello ${name}!`)\r\n        addUserCallback(name)\r\n        setName('')\r\n    }\r\n    const addUserOnEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && name) {\r\n            addUser()\r\n        } else {\r\n            setError('name is require')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            addUserOnEnter={addUserOnEnter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser = {\r\n            _id: v1(),\r\n            name,\r\n        }\r\n        setUsers([...users, newUser]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}